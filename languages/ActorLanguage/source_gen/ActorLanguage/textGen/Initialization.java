package ActorLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;

public abstract class Initialization {
  public static void init(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("#include <stdio.h>");
    tgs.newLine();
    tgs.append("#include <stdlib.h>");
    tgs.newLine();
    tgs.append("#include <pthread.h>");
    tgs.newLine();
    tgs.append("#include <unistd.h>");
    tgs.newLine();
    tgs.append("#include <string.h>");
    tgs.newLine();
    tgs.newLine();
    tgs.append("#define SIZE 100");
    tgs.newLine();
    tgs.append("#define BUFFER_SIZE 1024");
    tgs.newLine();
    tgs.newLine();
    tgs.append("typedef struct {");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("int address");
    tgs.newLine();
    tgs.indent();
    tgs.append("int write_fd");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("} map_item;");
    tgs.newLine();
    tgs.newLine();

    tgs.append("typedef struct {");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("map_item *map;");
    tgs.newLine();
    tgs.indent();
    tgs.append("int read_fd;");
    tgs.newLine();
    tgs.indent();
    tgs.append("int write_fd;");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("} ThreadData;");
    tgs.newLine();
    tgs.newLine();

  }
}
