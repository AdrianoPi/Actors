package ActorLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_BehaviorType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_BehaviorType() {
    super(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x5366e9c2d9a6b813L, "BehaviorType", "r:a6f544b3-65b6-4da8-ad8a-228799e10ea8(ActorLanguage.structure)/6009747775857014803");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_BATCH_0 = new EnumerationDescriptor.MemberDescriptor("BATCH", "BATCH", 0x5366e9c2d9a6b814L, "r:a6f544b3-65b6-4da8-ad8a-228799e10ea8(ActorLanguage.structure)/6009747775857014804");
  private final EnumerationDescriptor.MemberDescriptor myMember_RESPONSIVE_0 = new EnumerationDescriptor.MemberDescriptor("RESPONSIVE", "RESPONSIVE", 0x5366e9c2d9a6b815L, "r:a6f544b3-65b6-4da8-ad8a-228799e10ea8(ActorLanguage.structure)/6009747775857014805");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x10eda99958984cdeL, 0x9416196c5eca1268L, 0x5366e9c2d9a6b813L, 0x5366e9c2d9a6b814L, 0x5366e9c2d9a6b815L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_BATCH_0, myMember_RESPONSIVE_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "BATCH":
        return myMember_BATCH_0;
      case "RESPONSIVE":
        return myMember_RESPONSIVE_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
