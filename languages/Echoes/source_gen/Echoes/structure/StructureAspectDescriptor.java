package Echoes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEcho = createDescriptorForEcho();
  /*package*/ final ConceptDescriptor myConceptEchoScript = createDescriptorForEchoScript();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEcho, myConceptEchoScript);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Echo:
        return myConceptEcho;
      case LanguageConceptSwitch.EchoScript:
        return myConceptEchoScript;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForEcho() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Echoes", "Echo", 0x7490bbbd1519415eL, 0x8b1facaab58020fbL, 0x4a5cdb9e54c7755bL);
    b.class_(false, false, false);
    b.origin("r:cac2ac36-2a5a-4917-ae5f-b8c89756f9a5(Echoes.structure)/5358399129737721179");
    b.version(3);
    b.property("text", 0x4a5cdb9e54c7755dL).type(PrimitiveTypeId.STRING).origin("5358399129737721181").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEchoScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Echoes", "EchoScript", 0x7490bbbd1519415eL, 0x8b1facaab58020fbL, 0x4a5cdb9e54c77576L);
    b.class_(false, false, true);
    b.origin("r:cac2ac36-2a5a-4917-ae5f-b8c89756f9a5(Echoes.structure)/5358399129737721206");
    b.version(3);
    b.aggregate("echoes", 0x4a5cdb9e54c77577L).target(0x7490bbbd1519415eL, 0x8b1facaab58020fbL, 0x4a5cdb9e54c7755bL).optional(true).ordered(true).multiple(true).origin("5358399129737721207").done();
    return b.create();
  }
}
