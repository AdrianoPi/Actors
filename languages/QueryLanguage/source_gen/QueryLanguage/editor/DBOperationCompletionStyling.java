package QueryLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.menus.style.EditorMenuItemCustomizer;
import jetbrains.mps.openapi.editor.menus.style.EditorMenuItemStyle;
import jetbrains.mps.openapi.editor.menus.style.EditorMenuItemCustomizationContext;
import jetbrains.mps.editor.runtime.completion.CompletionMenuItemCustomizationContext;
import jetbrains.mps.editor.runtime.menus.EditorMenuItemCreatingConceptContextMatcher;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.editor.runtime.menus.EditorMenuItemCreatingCustomizationContext;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.editor.runtime.completion.CompletionItemInformation;
import java.util.Objects;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class DBOperationCompletionStyling implements EditorMenuItemCustomizer {

  @Override
  public void customize(EditorMenuItemStyle customization, EditorMenuItemCustomizationContext context) {
    if (context.get(CompletionMenuItemCustomizationContext.COMPLETION_ITEM_INFORMATION) == null) {
      return;
    }
    DBOperationCompletionStylingSpecific customizer = new DBOperationCompletionStylingSpecific();
    if (customizer.matches(context)) {
      customizer.customize(customization, context);
    }
  }

  private static class DBOperationCompletionStylingSpecific implements EditorMenuItemCustomizer {

    public boolean matches(EditorMenuItemCustomizationContext context) {
      return new EditorMenuItemCreatingConceptContextMatcher(CONCEPTS.DBOperation$CA).matchesContext(context) && getCompletionItemInformation(context) != null;
    }


    private SNode getParentNode(EditorMenuItemCustomizationContext context) {
      return context.get(EditorMenuItemCreatingCustomizationContext.PARENT_NODE);
    }
    private SNode getChild(EditorMenuItemCustomizationContext context) {
      return context.get(EditorMenuItemCreatingCustomizationContext.CURRENT_CHILD);
    }
    private SContainmentLink getLink(EditorMenuItemCustomizationContext context) {
      return context.get(EditorMenuItemCreatingCustomizationContext.CONTAINMENT_LINK);
    }
    private CompletionItemInformation getCompletionItemInformation(EditorMenuItemCustomizationContext context) {
      return context.get(CompletionMenuItemCustomizationContext.COMPLETION_ITEM_INFORMATION);
    }

    @Override
    public void customize(EditorMenuItemStyle style, EditorMenuItemCustomizationContext context) {
      customize_(getParentNode(context), getChild(context), getLink(context), style, getCompletionItemInformation(context));
    }
    private void customize_(SNode parentNode, SNode currentChild, SContainmentLink containmentLink, EditorMenuItemStyle style, CompletionItemInformation itemInformation) {
      if (Objects.equals(itemInformation.getOutputConcept(), CONCEPTS.CreateTable$ca)) {
        style.setDescriptionText("Create new table");
      } else if (Objects.equals(itemInformation.getOutputConcept(), CONCEPTS.InsertInto$mc)) {
        style.setDescriptionText("Add new row to existing table");
      } else if (Objects.equals(itemInformation.getOutputConcept(), CONCEPTS.Delete$Yp)) {
        style.setDescriptionText("Delete row(s) from table");
      } else if (Objects.equals(itemInformation.getOutputConcept(), CONCEPTS.Update$ri)) {
        style.setDescriptionText("Update row(s) of existing table");
      } else if (Objects.equals(itemInformation.getOutputConcept(), CONCEPTS.Select$Te)) {
        style.setDescriptionText("Query row(s) from existing table");
      }
    }
  }


  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept DBOperation$CA = MetaAdapterFactory.getInterfaceConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x2b087ec3aa655164L, "QueryLanguage.structure.DBOperation");
    /*package*/ static final SConcept CreateTable$ca = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x11100ee737443b2eL, "QueryLanguage.structure.CreateTable");
    /*package*/ static final SConcept InsertInto$mc = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x625a3ba00f1c72c8L, "QueryLanguage.structure.InsertInto");
    /*package*/ static final SConcept Delete$Yp = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x2b087ec3aa642699L, "QueryLanguage.structure.Delete");
    /*package*/ static final SConcept Update$ri = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x625a3ba00f23853fL, "QueryLanguage.structure.Update");
    /*package*/ static final SConcept Select$Te = MetaAdapterFactory.getConcept(0x26d1395b1ee643adL, 0xb522c0cdd699ded3L, 0x619ceb902420e379L, "QueryLanguage.structure.Select");
  }
}
